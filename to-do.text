Bugs

-
	Input
		./ircserv 8080 1 &
		nc -c localhost 8080
		QUIT :foo
	Output
	- map::at:  key not found
	-
		localhost:51756 has disconnected!
		Error occurred during recv: Socket operation on non-socket
		Error while reading buffer from a client!

-
	Input
		./ircserv 8080 1 &
		nc -c localhost 8080
		PASS 1
		^C
	Output
	- memory leak

-
	Input
		./ircserv 8080 1 &
		nc -c localhost 8080
		PASS 1^D
	Output
	- Pass handler is not executed

-
	Input
		./ircserv 8080 1 &
		nc -c localhost 8080
		PASS 1
		NICK foo
		USER a b c d
		^Z
		nc -c localhost 8080
		PASS 1
		NICK bar
	Output
		(1) 462 :You may not register

Secret knowledge

[ ] Do not throw exceptions.
[ ] Do not leak memory.
[ ] Memory must be freed in destructors when interfacting with C++.
[ ] Partial writes are not handled.
	[ ] What about POLLOUT on client sockets? sources/Client.cpp:48, sources/Server.cpp:72
[ ] Verify potentially buggy functions.
[x] Get rid of getX.
[ ] Get rid of unnecessary forward declarations.
[ ] ^D does not work.
[ ] Line break is not a delimiter by itself, only CRLF is.
[ ] Check ^Z. It disconnects for some reason.

[ ] Can there be client duplicates?
[ ] What's the identity? Currently it is a pointer. Should be some other name?
[ ] Delete all delete and free (and new and malloc).
[ ] What to do on zero read?
[ ] Should bare "QUIT\n" do something?
[ ] Memory leaks on ^D?
[ ] ./irvsev 4201337
[ ] 557c57e ??? Without SOH bad.

# Lexer and parser.

[ ] Don't recv in a loop.
	[ ] Hold parser and lexer objects inside of client.

[ ] Don't use char *and delete and free. Don't use pointers.
[ ] What to do
	if (word.size() == 0) {
		return (parseme){.tag = parseme::nothing};
	}
[ ] Replace .tag = error with try and catch.
